<?xml version="1.0" encoding="utf-8" ?>
<Project>
  
  <UsingTask TaskName="Mobile.BuildTools.Tasks.AutomaticBuildVersioningTask"
             AssemblyFile="$(_MobileBuildToolsParentBuildDirectory)/Mobile.BuildTools.dll"/>

  <Import Project="$(MSBuildThisFileDirectory)Mobile.BuildTools.ManifestsShared.targets"/>

  <!-- Properties for the TemplateManifest Task -->
  <PropertyGroup>
    <BuildResourcesDirectoryName Condition=" '$(BuildResourcesDirectoryName)' == '' ">build</BuildResourcesDirectoryName>
    <BuildResourcesDirRootPath Condition=" '$(BuildResourcesDirRootPath)' == '' ">$([System.IO.Path]::Combine($(SolutionDir), $(BuildResourcesDirectoryName)))</BuildResourcesDirRootPath>
    <InfoPlistTemplateName Condition=" '$(InfoPlistTemplateName)' == '' ">BuildTemplateInfo.plist</InfoPlistTemplateName>
    <AndroidManifestTemplateName Condition=" '$(AndroidManifestTemplateName)' == '' ">AndroidTemplateManifest.xml</AndroidManifestTemplateName>
    <TemplateManifestPath Condition=" '$(IsAndroidProject)' ">$([System.IO.Path]::Combine('$(BuildResourcesDirRootPath)', '$(AndroidManifestTemplateName)'))</TemplateManifestPath>
    <ManifestDestinationPath Condition=" '$(ManifestDestinationPath)' == '' And '$(IsAndroidProject)' ">$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', "Properties", "AndroidManifest.xml"))</ManifestDestinationPath>
    <TemplateManifestPath Condition=" '$(IsiOSProject)' ">$([System.IO.Path]::Combine('$(BuildResourcesDirRootPath)', '$(InfoPlistTemplateName)'))</TemplateManifestPath>
    <ManifestDestinationPath Condition=" '$(ManifestDestinationPath)' == '' And '$(IsiOSProject)' ">$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', "Info.plist"))</ManifestDestinationPath>
    <ManifestVariablePrefix Condition=" '$(ManifestVariablePrefix)' == '' ">Manifest_</ManifestVariablePrefix>
  </PropertyGroup>

  <!-- Provided for backwards compatibility with v1.X -->
  <Target Name="_TemplateManifestCopy"
          Inputs="$(TemplateManifestPath)"
          Outputs="$(ManifestDestinationPath)"
          Condition=" Exists($(TemplateManifestPath)) And !Exists($(ManifestDestinationPath)) ">
    <Copy SourceFiles="@(TemplateManifestPath)"
          DestinationFiles="@(ManifestDestinationPath)" />
  </Target>

  <Target Name="_TemplateManifestDebug"
          BeforeTargets="HandleTokenizedInfoPlist;HandleAndroidManifest"
          Condition=" '$(MobileBuildToolsDebug)' == 'true' ">
    <Message Text="Checking for Platform Template Configurations to Copy" />
    <Message Text="SdkShortFrameworkIdentifier: '$(_SdkShortFrameworkIdentifier)'" />
    <Message Text="Prefix: '$(ManifestVariablePrefix)'" />
    <Message Text="Token: '$(ManifestToken)'" />
    <Message Text="ManifestTemplatePath: '$(TemplateManifestPath)'" />
    <Message Text="ManifestOutputPath: '$(ManifestDestinationPath)'" />
  </Target>

  <Target Name="_GatherManifests">
    <PropertyGroup>
      <TemlateAppManifest Condition=" '$(IsiOSProject)' ">$(_AppBundlePath)Info.plist</TemlateAppManifest>
      <TemlateAppManifest Condition=" '$(IsAndroidProject)' ">$(IntermediateOutputPath)android\AndroidManifest.xml</TemlateAppManifest>
    </PropertyGroup>
  </Target>

  <Target Name="AutomaticBuildVersioning"
          AfterTargets="HandleAndroidManifest;HandleTokenizedInfoPlist">

    <AutomaticBuildVersioningTask Behavior="$(AutomaticVersionBehavior)"
                                  VersionEnvironment="$(AutomaticVersionEnvironment)"
                                  VersionOffset="$(AutomaticVersionOffset)"
                                  ManifestPath="$(TemlateAppManifest)"
                                  TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)"
                                  SdkShortFrameworkIdentifier="$(_SdkShortFrameworkIdentifier)"
                                  DebugOutput="$(MobileBuildToolsDebug)" />
  </Target>

  <Target Name="_GatherManifestForAutomaticVersioning"
          AfterTargets="HandleAndroidManifest;HandleTokenizedInfoPlist">
    <PropertyGroup>
      <AutomaticVersionOffset Condition=" '$(AutomaticVersionOffset)' == '' ">0</AutomaticVersionOffset>
      <AutomaticVersionEnvironment Condition=" '$(AutomaticVersionEnvironment)' == '' ">All</AutomaticVersionEnvironment>
      <EnableAutomaticVersioning>false</EnableAutomaticVersioning>
      <EnableAutomaticVersioning Condition=" '$(AutomaticVersionBehavior)' == 'PreferBuildNumber' Or '$(AutomaticVersionBehavior)' == 'Timestamp' ">true</EnableAutomaticVersioning>
    </PropertyGroup>
  </Target>

</Project>
