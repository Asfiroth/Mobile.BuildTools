parameters:
  solution: '**/*.sln'
  nugetVersion: ''

jobs:
- job: BuildNuGet
  displayName: Build NuGet & Run Basic Unit Tests
  pool:
    vmImage: $(WindowsAgent)
    demands:
    - msbuild
    - vstest
  steps:
  - checkout: self
    clean: true
    lfs: true
    submodules: true

  - template: ../steps/setup-dotnetcore.yml

  - powershell: |
     Invoke-WebRequest -Uri https://go.microsoft.com/fwlink/p/?linkid=864422 -OutFile ./win10.0.16299sdk.exe
     ./win10.0.16299sdk.exe /features + /quiet
    displayName: Download Windows 10 16299 SDK

  - template: ../steps/nuget-restore.yml
    parameters:
      version: ${{ parameters.nugetVersion }}
      solution: Mobile.BuildTools.sln

  - powershell: ls $env:LOCALAPPDATA\Temp\NuGetScratch
    displayName: 'List Cached Packages'

  - task: MSBuild@1
    displayName: 'Build solution Mobile.BuildTools.sln'
    inputs:
      solution: Mobile.BuildTools.sln
      platform: '$(BuildPlatform)'
      configuration: '$(BuildConfiguration)'
      createLogFile: true

  - template: ../steps/unit-tests.yml
    parameters:
      projects: 'Mobile.BuildTools.*/*.Tests.csproj'

  - task: PowerShell@2
      displayName: 'Authenticode Sign Artifacts'
      inputs:
        filePath: 'build\Sign-Packages.ps1'
      env:
        SignClientUser: $(SignClientUser)
        SignClientSecret: $(SignClientSecret)
        SignClientClientId: $(SignClientClientId)
        SignClientTenantId: $(SignClientTenantId)
        SignServiceResourceId: $(SignServiceResourceId)
      condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))

  - task: PublishPipelineArtifact@0
    displayName: 'Publish Artifacts'
    inputs:
      artifactName: Artifacts
      targetPath: '$(Build.ArtifactStagingDirectory)/Artifacts'


