trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - build
    - src
    - tests
    - Directory.build.props
    - Directory.build.targets
    - global.json

pr:
  branches:
    include:
    - master
  paths:
    include:
    - build
    - src
    - tests
    - Directory.build.props
    - Directory.build.targets
    - global.json

name: $(Build.BuildId)

variables:
- name: WindowsAgent
  value: windows-latest
- name: MacAgent
  value: macOS-latest
- name: NuGetVersion
  value: '5.4.0'
- name: BuildConfiguration
  value: 'Release'
- name: BuildPlatform
  value: 'Any CPU'
- name: TargetSolution
  value: 'Mobile.BuildTools.sln'
- group: 'Code Signing'
- group: 'AppSigning'
- group: 'GitHubRelease'

stages:
- stage: Build
  displayName: Run Build
  jobs:
  - template: jobs/build-library.yml
    parameters:
      solution: Mobile.BuildTools.sln
      nugetVersion: $(NuGetVersion)

- stage: Test
  displayName: Run Tests
  dependsOn: Build
  jobs:
  - template: jobs/integration-tests.yml
    parameters:
      solution: E2E/E2E.sln
      nugetVersion: $(NuGetVersion)
      vmImage: $(WindowsAgent)
      jobName: IntegrationTestsWin
      displayName: Integration Tests (Windows)

  - template: jobs/integration-tests.yml
    parameters:
      solution: E2E/E2E.sln
      nugetVersion: $(NuGetVersion)
      vmImage: $(MacAgent)
      jobName: IntegrationTestsMac
      displayName: Integration Tests (Mac)

  # - template: jobs/android.yml
  #   parameters:
  #     solution: E2EApp.sln
  #     baseSolutionDirectory: E2E/E2EApp
  #     appRootDirectory: E2E/E2EApp/E2EApp.Android
  #     csprojName: E2EApp.Android.csproj
  #     nugetVersion: $(NuGetVersion)

  # - template: jobs/ios.yml
  #   parameters:
  #     solution: E2EApp.sln
  #     baseSolutionDirectory: E2E/E2EApp
  #     appRootDirectory: E2E/E2EApp/E2EApp.iOS
  #     csprojName: E2EApp.iOS.csproj
  #     nugetVersion: $(NuGetVersion)

- stage: Release
  displayName: Deploy NuGet Artifacts
  dependsOn: Test
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: PipelineArtifacts
    displayName: Pipeline Artifacts
    environment: PipelineArtifacts
    strategy:
      runOnce:
        deploy:
          steps:
          - task: NuGetCommand@2
            displayName: NuGet Push
            inputs:
              command: 'push'
              packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: '4ad6c5a1-ac0f-48ca-b995-6c97e879a584/b8446c23-bb38-4454-8a29-325240a11f9b'
              allowPackageConflicts: true
  - deployment: NuGet
    displayName: NuGet.org
    environment: NuGet
    condition: and(succeeded(),or(eq(variables['IS_PREVIEW'], true), eq(variables['IS_RELEASE'], true)))
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            clean: true
            submodules: false

          - powershell: build/Process-Release.ps1
            displayName: Process Artifacts for Release

          - task: GithubRelease@0
            displayName: 'Create GitHub Release'
            inputs:
              gitHubConnection: 'Mobile.BuildTools'
              title: '$(ReleaseDisplayName)'
              tagSource: manual
              tag: 'v$(VersionName)'
              isPreRelease: $(IS_PREVIEW)
              assets: |
               $(Pipeline.Workspace)/**/*.nupkg
              isDraft: true
              addChangeLog: true

          - task: NuGetCommand@2
            displayName: NuGet Push
            inputs:
              command: push
              packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg;!$(Pipeline.Workspace)/**/*.symbols.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: 'NuGet'


