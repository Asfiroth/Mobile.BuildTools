trigger:
  batch: true
  branches:
    include:
    - master
    - v2.0
  paths:
    exclude:
    - README.md
    - .editorconfig
    - .gitignore

pr:
  branches:
    include:
    - master
    - v2.0
  paths:
    exclude:
    - README.md
    - .editorconfig
    - .gitignore

name: $(Build.BuildId)

variables:
- name: WindowsAgent
  value: windows-latest
- name: MacAgent
  value: macOS-latest
- name: NuGetVersion
  value: '5.3.1'
- name: BuildConfiguration
  value: 'Release'
- name: BuildPlatform
  value: 'Any CPU'
- name: TargetSolution
  value: 'Mobile.BuildTools.sln'
- group: 'Code Signing'
- group: 'AppSigning'
- group: 'GitHubRelease'

stages:
- stage: Build
  displayName: Run Build
  jobs:
  - template: jobs/build-library.yml
    parameters:
      solution: Mobile.BuildTools.sln
      nugetVersion: $(NuGetVersion)

- stage: Test
  displayName: Run Tests
  dependsOn: Build
  jobs:
  - template: jobs/integration-tests.yml
    parameters:
      solution: E2E/E2E.sln
      nugetVersion: $(NuGetVersion)
      vmImage: $(WindowsAgent)
      jobName: IntegrationTestsWin
      displayName: Integration Tests (Windows)

  - template: jobs/integration-tests.yml
    parameters:
      solution: E2E/E2E.sln
      nugetVersion: $(NuGetVersion)
      vmImage: $(MacAgent)
      jobName: IntegrationTestsMac
      displayName: Integration Tests (Mac)

  # - template: jobs/android.yml
  #   parameters:
  #     solution: E2EApp.sln
  #     baseSolutionDirectory: E2E/E2EApp
  #     appRootDirectory: E2E/E2EApp/E2EApp.Android
  #     csprojName: E2EApp.Android.csproj
  #     nugetVersion: $(NuGetVersion)

  # - template: jobs/ios.yml
  #   parameters:
  #     solution: E2EApp.sln
  #     baseSolutionDirectory: E2E/E2EApp
  #     appRootDirectory: E2E/E2EApp/E2EApp.iOS
  #     csprojName: E2EApp.iOS.csproj
  #     nugetVersion: $(NuGetVersion)

- stage: Release
  displayName: Deploy NuGet Artifacts
  dependsOn: Test
  jobs:
  - job: githubRelease
    displayName: Process GitHub Release
    pool:
      vmImage: $(WindowsAgent)
    steps:
    - task: PowerShell@2
      displayName: 'Process Release'
      inputs:
        filePath: 'build\Process-Release.ps1'

    - task: DownloadPipelineArtifact@1
      inputs:
        artifactName: 'Artifacts'
      condition: and(succeeded(), eq(variables['DeployToNuGet'], 'true'))

    # - task: jakobehn.jakobehn-vsts-github-tasks.publish-github-release.PublishGitHubRelease@0
    #   displayName: 'Publish GitHub Release - Preview'
    #   inputs:
    #     applicationName: AzureDevOps
    #     token: '$(GitHubToken)'
    #     repo: Mobile.BuildTools
    #     owner: dansiegel
    #     tagName: 'v$(VersionName)'
    #     releaseName: '$(ReleaseDisplayName)'
    #     prerelease: $(IsPreview)
    #     assetsPattern: '$(Pipeline.Workspace)\Artifacts\*.nupkg'
    #   condition: and(succeeded(), eq(variables['DeployToNuGet'], 'true'))

  - deployment: myget
    displayName: Deploy to MyGet
    dependsOn: githubRelease
    environment: 'MyGet'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: 'Artifacts'

          - task: NuGetCommand@2
            displayName: 'NuGet push'
            inputs:
              command: push
              packagesToPush: '$(Pipeline.Workspace)/Artifacts/*.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: 'MyGet-DanSiegel'
  - deployment: nuget
    displayName: Deploy to NuGet
    dependsOn: githubRelease
    environment: 'NuGet'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@1
            inputs:
              artifactName: 'Artifacts'

          - task: NuGetCommand@2
            displayName: 'NuGet push'
            inputs:
              command: push
              packagesToPush: '$(Pipeline.Workspace)/Artifacts/*.nupkg;!$(Pipeline.Workspace)/Artifacts/*-ci.nupkg!$(Pipeline.Workspace)/Artifacts/*.symbols.nupkg'
              nuGetFeedType: external
              publishFeedCredentials: 'NuGet'
    condition: and(succeeded(), eq(variables['DeployToNuGet'], 'true'))

